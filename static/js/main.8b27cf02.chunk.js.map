{"version":3,"sources":["github-button.jpg","App.js","index.js"],"names":["drinkToCl","beer","wine","liquor","HOUR_IN_MILLISECONDS","App","useState","weight","setWeight","timeWindow","setTimeWindow","sex","setSex","drink","setDrink","hourly","setHourly","goal","setGoal","targetBAC","setTargetBAC","anotherPour","setAnotherPour","drinkAlert","document","getElementById","play","id","src","href","target","rel","width","githubSrc","alt","className","Math","round","onClick","peakInterval","setInterval","setTimeout","clearInterval","onSubmit","e","preventDefault","bodyWeight","R","numberOfDrinks","parseFloat","parseInt","calculateBac","for","value","onChange","type","name","placeholder","checked","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b27cf02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-button.849f97db.jpg\";","import { useState } from \"react\";\n\nimport githubSrc from \"./github-button.jpg\";\nimport MetaTags from 'react-meta-tags';\n\nconst drinkToCl = {\n    beer: 33,\n    wine: 15,\n    liquor: 4,\n};\n\nconst HOUR_IN_MILLISECONDS = 36000000;\n\nfunction App() {\n    const [weight, setWeight] = useState(80);\n    const [timeWindow, setTimeWindow] = useState(1);\n    const [sex, setSex] = useState(\"female\");\n    const [drink, setDrink] = useState(\"beer\");\n    const [hourly, setHourly] = useState(null);\n    const [goal, setGoal] = useState(null);\n    const [targetBAC, setTargetBAC] = useState(0.075);\n    const [anotherPour, setAnotherPour] = useState(false);\n\n    const calculateBac = () => {\n        const bodyWeight = weight * 1000;\n        const R = sex === \"female\" ? 0.55 : 0.68;\n        const alcoholConsumed = bodyWeight * R * ((parseFloat(targetBAC) + (0.016*parseInt(timeWindow)))/ 100);\n\n        const addedBACPerHour = (14/(bodyWeight*R)) *100\n        const burnedBACPerHour = 0.016\n        const neededDrinksPerHour = burnedBACPerHour/addedBACPerHour\n\n\n        const numberOfDrinks = alcoholConsumed / 14;\n        setHourly(neededDrinksPerHour);\n        setGoal(numberOfDrinks);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        clearInterval();\n        calculateBac();\n    };\n\n    const drinkAlert = () => {\n        document.getElementById(\"notification-sound\").play();\n        setAnotherPour(true);\n    };\n\n    const startDrinkTimer = () => {\n        drinkAlert();\n        const peakInterval = setInterval(() => {\n            drinkAlert();\n        }, (HOUR_IN_MILLISECONDS * timeWindow) / (goal - 1)); // -1 Since the first drink will be poured directly\n\n        // Used for maintainment drinking\n        // Will wait until peak is reached then start maintaining timer.\n        setTimeout(() => {\n            clearInterval(peakInterval);\n            setInterval(() => drinkAlert(), HOUR_IN_MILLISECONDS / hourly)\n        }, HOUR_IN_MILLISECONDS * timeWindow)\n    };\n\n    return (\n        <article>\n            <MetaTags>\n                <title>{anotherPour ? \"Time for another pour!\" : \"Ballmers Peak Calculator\"}</title>\n            </MetaTags>\n            <audio id=\"notification-sound\">\n                <source src=\"/ballmers-peak-calculator/notification-sound.mp3\" />\n            </audio>\n            <a href=\"https://github.com/Pluppen/ballmers-peak-calculator\" target=\"_blank\" rel=\"noreferrer\">\n                <img width=\"120\" src={githubSrc} alt=\"github button\" />\n            </a>\n            <header className=\"flex flex-col justify-center items-center py-12\">\n                <h1 className=\"text-5xl mb-4 font-medium\">\n                    Ballmers Peak Calculator\n                </h1>\n                <p className=\"text-xl\">\n                    \"A BAC between 0.129% and 0.138% confers superhuman programming\n                    ability\"\n                </p>\n                <a\n                    href=\"https://xkcd.com/323/\"\n                    className=\"text-xs cursor-pointer hover:underline\"\n                >\n                    source\n                </a>\n            </header>\n            <main>\n                {goal ? (\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <h2 className=\"text-center text-2xl font-medium mb-4\">\n                            You will need to drink around\n                            <span className=\"underline cursor-pointer relative\">\n                                <span>\n                                    {\" \"}\n                                    {Math.round(goal * 10) / 10} glasses of {drink}\n                                </span>\n                                <span className=\"opacity-0 transition duration-500 hover:opacity-100 absolute text-lg left-0 top-0 w-48 h-12\">\n                                    <span className=\"absolute top-8 bg-white p-2 border rounded-md w-64 left-0\">\n                                        More exactly {Math.round(drinkToCl[drink] * goal)}cl of{\" \"}\n                                        {drink}\n                                    </span>\n                                </span>\n                            </span>{\" \"}\n                            in {timeWindow} hour(s) to reach the peak.\n                        </h2>\n                        <h2 className=\"text-center text-xl font-medium mb-4\">\n                            You'll then need {Math.round(hourly)} drink per hour to maintain the peak.\n                        </h2>\n                        <button className=\"px-6 py-3 rounded-full border border-blue-600 uppercase text-blue-600 text-md mb-8 font-semibold hover:bg-blue-100 transition duration-400\" onClick={startDrinkTimer}>\n                            Start Timer\n                        </button>\n                    </div>\n                ) : null}\n                <form\n                    className=\"flex flex-col justify-center items-center\"\n                    onSubmit={handleSubmit}\n                >\n\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <label for=\"hoursToPeak\" className=\"text-xl\">\n                            How many hours until peak time?\n                        </label>\n                        <select value={timeWindow} onChange={(e) => setTimeWindow(e.target.value)} className=\"px-6 py-3 my-4 border rounded-xl\">\n                            <option value=\"1\">1 hour</option>\n                            <option value=\"2\">2 hours</option>\n                            <option value=\"3\">3 hours</option>\n                            <option value=\"4\">4 hours</option>\n                        </select>\n                    </div>\n\n\n\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <label for=\"wight\" className=\"text-xl\">\n                            What's your weight? (kg)\n                        </label>\n                        <input\n                            type=\"number\"\n                            id=\"weight\"\n                            name=\"weight\"\n                            placeholder=\"Weight in kilograms\"\n                            className=\"px-6 py-3 my-4 border rounded-xl\"\n                            value={weight}\n                            onChange={(e) => setWeight(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <label for=\"weight\" className=\"text-xl\">\n                            Select your BAC target\n                        </label>\n                        <select value={targetBAC} onChange={(e) => setTargetBAC(e.target.value)} className=\"px-6 py-3 my-4 border rounded-xl\">\n                            <option value={0.075}>The Scientific Way (0.075%)</option>\n                            <option value={0.129}>The Light Ballmer Way (0.129%)</option>\n                            <option value={0.133}>The Medium Ballmer Way (0.133%)</option>\n                            <option value={0.138}>The Strong Ballmer Way (0.138%)</option>\n                        </select>\n                    </div>\n\n                    <p className=\"mt-4 mb-4 text-xl\">What's your sex?</p>\n                    <div className=\"flex space-x-4\">\n                        <div>\n                            <label for=\"sexFemale\">Female</label>\n                            <input\n                                className=\"ml-2\"\n                                id=\"sexFemale\"\n                                type=\"radio\"\n                                name=\"sex\"\n                                value=\"female\"\n                                checked={sex === \"female\"}\n                                onClick={() => setSex(\"female\")}\n                            />\n                        </div>\n                        <div>\n                            <label for=\"sexMale\">Male</label>\n                            <input\n                                name=\"sex\"\n                                id=\"sexMale\"\n                                className=\"ml-2\"\n                                value=\"male\"\n                                type=\"radio\"\n                                checked={sex === \"male\"}\n                                onClick={() => setSex(\"male\")}\n                            />\n                        </div>\n                    </div>\n\n                    <p className=\"mt-8 mb-4 text-xl\">What's your preferred drink?</p>\n                    <div className=\"flex space-x-4\">\n                        <div>\n                            <label for=\"drinkBeer\">🍺 Beer (5% Alcohol)</label>\n                            <input\n                                className=\"ml-2\"\n                                id=\"drinkBeer\"\n                                type=\"radio\"\n                                name=\"drink\"\n                                value={\"beer\"}\n                                checked={drink === \"beer\"}\n                                onClick={() => setDrink(\"beer\")}\n                            />\n                        </div>\n                        <div>\n                            <label for=\"drinkLiquor\">🥃 Liquor (40% Alcohol)</label>\n                            <input\n                                name=\"drink\"\n                                id=\"drinkLiquor\"\n                                className=\"ml-2\"\n                                type=\"radio\"\n                                value={\"liquor\"}\n                                checked={drink === \"liquor\"}\n                                onClick={() => setDrink(\"liquor\")}\n                            />\n                        </div>\n\n                        <div>\n                            <label for=\"drinkWine\">🍷 Wine (12% Alcohol)</label>\n                            <input\n                                name=\"drink\"\n                                id=\"drinkWine\"\n                                className=\"ml-2\"\n                                type=\"radio\"\n                                value={\"wine\"}\n                                checked={drink === \"wine\"}\n                                onClick={() => setDrink(\"wine\")}\n                            />\n                        </div>\n                    </div>\n\n                    <button className=\"px-8 py-4 rounded-full bg-blue-600 uppercase text-white text-md mt-8 font-semibold\">\n                        Calculate\n                    </button>\n                </form>\n            </main>\n            <footer className=\"flex flex-col justify-center items-center py-12\">\n\n                <p className=\"text-m\">\n                    Disclaimer - the above BAC result is not a good indication on if it's safe to drive or operate heavy machinery. Drink with caution.\n                </p>\n\n            </footer>\n            <div className={\"flex flex-col justify-center items-center fixed top-0 left-0 w-full h-full bg-white px-4 \" + (anotherPour ? \"block\" : \"hidden\")}>\n                <h2 className=\"text-6xl uppercase font-bold\">Time for another pour 🍻</h2>\n                <button onClick={() => setAnotherPour(false)} className=\"mt-8 px-8 py-4 uppercase bg-blue-600 text-white font-bold shadow-lg border rounded-full\">The drink has been poured ✅</button>\n            </div>\n        </article>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}